pipeline:
  name: healet-webapp
  identifier: healetwebapp
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: github
        repoName: Healet-webapp
        build: <+input>
  stages:
    - stage:
        name: Static Analysis
        identifier: sonar
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Passing Workspace variable to sonarqube
                  identifier: Run_1
                  spec:
                    shell: Sh
                    command: |-
                      workspace=$(pwd)
                      export workspace
                      echo "$workspace"
                      ls -ltr "$workspace"
                    outputVariables:
                      - name: ws
                        type: String
                        value: workspace
              - step:
                  type: Sonarqube
                  name: Sonarqube
                  identifier: Sonarqube
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      workspace: <+pipeline.stages.sonar.spec.execution.steps.Run_1.output.outputVariables.ws>
                      detection: auto
                    advanced:
                      log:
                        level: info
                    auth:
                      access_token: sqp_58f42bcc49835ce2389a844cef6ae0f64ee24729
                      domain: http://16.16.170.187:9000
                      ssl: true
                    tool:
                      project_key: harness-webapp
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
        variables:
          - name: WORKSPACE
            type: String
            description: ""
            required: false
            value: /harness-fixed-workspace
    - stage:
        name: Docker Build
        identifier: Docker_Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Docker Build
                  identifier: Docker_Build
                  spec:
                    shell: Sh
                    command: sudo docker build -t harness-healet:latest .
              - step:
                  type: Run
                  name: Docker image tagging
                  identifier: Docker_image_tagging
                  spec:
                    shell: Sh
                    command: sudo docker tag harness-healet:latest pritidevops/harness-healet:latest
              - step:
                  type: Run
                  name: Remove un-necessary images
                  identifier: Remove_unnecessary_images
                  spec:
                    shell: Sh
                    command: sudo docker rmi -f harness-healet:latest
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
    - stage:
        name: Docker image scanning
        identifier: Docker_image_scanning
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: AquaTrivy
                  name: AquaTrivy
                  identifier: AquaTrivy
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      detection: auto
                    advanced:
                      log:
                        level: info
                    privileged: true
                    image:
                      type: docker_v2
                      tag: latest
                      name: pritidevops/healet-harness
                      domain: docker.io
    - stage:
        name: Pushing Docker image to DockerHub
        identifier: Pushing_Docker_image_to_DockerHub
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Pushing to dockerhub
                  identifier: Pushing_to_dockerhub
                  spec:
                    shell: Sh
                    command: |-
                      printenv
                      echo "$DOCKER_USER"
                      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                      # Push the image
                      sudo docker push "${DOCKERHUB_USERNAME}/harness-healet:latest"
                    envVariables:
                      DOCKERHUB_USERNAME: pritidevops
                      DOCKERHUB_PASSWORD: Xperts@3619
        variables:
          - name: username
            type: String
            description: ""
            required: true
            value: pritidevops
          - name: password
            type: String
            description: ""
            required: false
            value: Xperts@3619
